/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKWIFI_HAL_CLIENT_MGT_H
#define _MOCKWIFI_HAL_CLIENT_MGT_H

#include "unity.h"
#include "wifi_hal_client_mgt.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockwifi_hal_client_mgt_Init(void);
void Mockwifi_hal_client_mgt_Destroy(void);
void Mockwifi_hal_client_mgt_Verify(void);




#define wifi_getBandSteeringEnable_ExpectAndReturn(enable, cmock_retval) wifi_getBandSteeringEnable_CMockExpectAndReturn(__LINE__, enable, cmock_retval)
void wifi_getBandSteeringEnable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BOOL* enable, INT cmock_to_return);
#define wifi_setBandSteeringEnable_ExpectAndReturn(enable, cmock_retval) wifi_setBandSteeringEnable_CMockExpectAndReturn(__LINE__, enable, cmock_retval)
void wifi_setBandSteeringEnable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, BOOL enable, INT cmock_to_return);
#define wifi_getBandSteeringApGroup_ExpectAndReturn(output_ApGroup, cmock_retval) wifi_getBandSteeringApGroup_CMockExpectAndReturn(__LINE__, output_ApGroup, cmock_retval)
void wifi_getBandSteeringApGroup_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* output_ApGroup, INT cmock_to_return);
#define wifi_setBandSteeringApGroup_ExpectAndReturn(ApGroup, cmock_retval) wifi_setBandSteeringApGroup_CMockExpectAndReturn(__LINE__, ApGroup, cmock_retval)
void wifi_setBandSteeringApGroup_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char* ApGroup, INT cmock_to_return);
#define wifi_getBandSteeringBandUtilizationThreshold_ExpectAndReturn(radioIndex, pBuThreshold, cmock_retval) wifi_getBandSteeringBandUtilizationThreshold_CMockExpectAndReturn(__LINE__, radioIndex, pBuThreshold, cmock_retval)
void wifi_getBandSteeringBandUtilizationThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT* pBuThreshold, INT cmock_to_return);
#define wifi_setBandSteeringBandUtilizationThreshold_ExpectAndReturn(radioIndex, buThreshold, cmock_retval) wifi_setBandSteeringBandUtilizationThreshold_CMockExpectAndReturn(__LINE__, radioIndex, buThreshold, cmock_retval)
void wifi_setBandSteeringBandUtilizationThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT buThreshold, INT cmock_to_return);
#define wifi_getBandSteeringRSSIThreshold_ExpectAndReturn(radioIndex, pRssiThreshold, cmock_retval) wifi_getBandSteeringRSSIThreshold_CMockExpectAndReturn(__LINE__, radioIndex, pRssiThreshold, cmock_retval)
void wifi_getBandSteeringRSSIThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT* pRssiThreshold, INT cmock_to_return);
#define wifi_setBandSteeringRSSIThreshold_ExpectAndReturn(radioIndex, rssiThreshold, cmock_retval) wifi_setBandSteeringRSSIThreshold_CMockExpectAndReturn(__LINE__, radioIndex, rssiThreshold, cmock_retval)
void wifi_setBandSteeringRSSIThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT rssiThreshold, INT cmock_to_return);
#define wifi_getBandSteeringPhyRateThreshold_ExpectAndReturn(radioIndex, pPrThreshold, cmock_retval) wifi_getBandSteeringPhyRateThreshold_CMockExpectAndReturn(__LINE__, radioIndex, pPrThreshold, cmock_retval)
void wifi_getBandSteeringPhyRateThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT* pPrThreshold, INT cmock_to_return);
#define wifi_setBandSteeringPhyRateThreshold_ExpectAndReturn(radioIndex, prThreshold, cmock_retval) wifi_setBandSteeringPhyRateThreshold_CMockExpectAndReturn(__LINE__, radioIndex, prThreshold, cmock_retval)
void wifi_setBandSteeringPhyRateThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT prThreshold, INT cmock_to_return);
#define wifi_getBandSteeringOverloadInactiveTime_ExpectAndReturn(radioIndex, overloadInactiveTime, cmock_retval) wifi_getBandSteeringOverloadInactiveTime_CMockExpectAndReturn(__LINE__, radioIndex, overloadInactiveTime, cmock_retval)
void wifi_getBandSteeringOverloadInactiveTime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT* overloadInactiveTime, INT cmock_to_return);
#define wifi_setBandSteeringOverloadInactiveTime_ExpectAndReturn(radioIndex, overloadInactiveTime, cmock_retval) wifi_setBandSteeringOverloadInactiveTime_CMockExpectAndReturn(__LINE__, radioIndex, overloadInactiveTime, cmock_retval)
void wifi_setBandSteeringOverloadInactiveTime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT overloadInactiveTime, INT cmock_to_return);
#define wifi_getBandSteeringIdleInactiveTime_ExpectAndReturn(radioIndex, idleInactiveTime, cmock_retval) wifi_getBandSteeringIdleInactiveTime_CMockExpectAndReturn(__LINE__, radioIndex, idleInactiveTime, cmock_retval)
void wifi_getBandSteeringIdleInactiveTime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT* idleInactiveTime, INT cmock_to_return);
#define wifi_setBandSteeringIdleInactiveTime_ExpectAndReturn(radioIndex, idleInactiveTime, cmock_retval) wifi_setBandSteeringIdleInactiveTime_CMockExpectAndReturn(__LINE__, radioIndex, idleInactiveTime, cmock_retval)
void wifi_setBandSteeringIdleInactiveTime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT radioIndex, INT idleInactiveTime, INT cmock_to_return);
#define wifi_getBandSteeringLog_ExpectAndReturn(record_index, pSteeringTime, pClientMAC, pSourceSSIDIndex, pDestSSIDIndex, pSteeringReason, cmock_retval) wifi_getBandSteeringLog_CMockExpectAndReturn(__LINE__, record_index, pSteeringTime, pClientMAC, pSourceSSIDIndex, pDestSSIDIndex, pSteeringReason, cmock_retval)
void wifi_getBandSteeringLog_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT record_index, ULONG* pSteeringTime, CHAR* pClientMAC, INT* pSourceSSIDIndex, INT* pDestSSIDIndex, INT* pSteeringReason, INT cmock_to_return);
#define wifi_getApAssociatedDevicesHighWatermarkThreshold_ExpectAndReturn(apIndex, output, cmock_retval) wifi_getApAssociatedDevicesHighWatermarkThreshold_CMockExpectAndReturn(__LINE__, apIndex, output, cmock_retval)
void wifi_getApAssociatedDevicesHighWatermarkThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UINT* output, INT cmock_to_return);
#define wifi_setApAssociatedDevicesHighWatermarkThreshold_ExpectAndReturn(apIndex, Threshold, cmock_retval) wifi_setApAssociatedDevicesHighWatermarkThreshold_CMockExpectAndReturn(__LINE__, apIndex, Threshold, cmock_retval)
void wifi_setApAssociatedDevicesHighWatermarkThreshold_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UINT Threshold, INT cmock_to_return);
#define wifi_getApAssociatedDevicesHighWatermarkThresholdReached_ExpectAndReturn(apIndex, output, cmock_retval) wifi_getApAssociatedDevicesHighWatermarkThresholdReached_CMockExpectAndReturn(__LINE__, apIndex, output, cmock_retval)
void wifi_getApAssociatedDevicesHighWatermarkThresholdReached_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UINT* output, INT cmock_to_return);
#define wifi_getApAssociatedDevicesHighWatermark_ExpectAndReturn(apIndex, output, cmock_retval) wifi_getApAssociatedDevicesHighWatermark_CMockExpectAndReturn(__LINE__, apIndex, output, cmock_retval)
void wifi_getApAssociatedDevicesHighWatermark_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UINT* output, INT cmock_to_return);
#define wifi_getApAssociatedDevicesHighWatermarkDate_ExpectAndReturn(apIndex, output_in_seconds, cmock_retval) wifi_getApAssociatedDevicesHighWatermarkDate_CMockExpectAndReturn(__LINE__, apIndex, output_in_seconds, cmock_retval)
void wifi_getApAssociatedDevicesHighWatermarkDate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, ULONG* output_in_seconds, INT cmock_to_return);
#define wifi_setFastBSSTransitionActivated_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_setFastBSSTransitionActivated_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_setFastBSSTransitionActivated_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR activate, INT cmock_to_return);
#define wifi_getBSSTransitionActivated_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_getBSSTransitionActivated_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_getBSSTransitionActivated_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, BOOL* activate, INT cmock_to_return);
#define wifi_setEAP_Param_ExpectAndReturn(apIndex, value, param, cmock_retval) wifi_setEAP_Param_CMockExpectAndReturn(__LINE__, apIndex, value, param, cmock_retval)
void wifi_setEAP_Param_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UINT apIndex, UINT value, char* param, INT cmock_to_return);
#define wifi_getEAP_Param_ExpectAndReturn(apIndex, output, cmock_retval) wifi_getEAP_Param_CMockExpectAndReturn(__LINE__, apIndex, output, cmock_retval)
void wifi_getEAP_Param_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UINT apIndex, wifi_eap_config_t* output, INT cmock_to_return);
#define wifi_getFTOverDSActivated_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_getFTOverDSActivated_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_getFTOverDSActivated_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, BOOL* activate, INT cmock_to_return);
#define wifi_setFTOverDSActivated_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_setFTOverDSActivated_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_setFTOverDSActivated_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, BOOL* activate, INT cmock_to_return);
#define wifi_getFTMobilityDomainID_ExpectAndReturn(apIndex, mobilityDomain, cmock_retval) wifi_getFTMobilityDomainID_CMockExpectAndReturn(__LINE__, apIndex, mobilityDomain, cmock_retval)
void wifi_getFTMobilityDomainID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR* mobilityDomain, INT cmock_to_return);
#define wifi_setFTMobilityDomainID_ExpectAndReturn(apIndex, mobilityDomain, cmock_retval) wifi_setFTMobilityDomainID_CMockExpectAndReturn(__LINE__, apIndex, mobilityDomain, cmock_retval)
void wifi_setFTMobilityDomainID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR* mobilityDomain, INT cmock_to_return);
#define wifi_getFTResourceRequestSupported_ExpectAndReturn(apIndex, supported, cmock_retval) wifi_getFTResourceRequestSupported_CMockExpectAndReturn(__LINE__, apIndex, supported, cmock_retval)
void wifi_getFTResourceRequestSupported_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, BOOL* supported, INT cmock_to_return);
#define wifi_setFTResourceRequestSupported_ExpectAndReturn(apIndex, supported, cmock_retval) wifi_setFTResourceRequestSupported_CMockExpectAndReturn(__LINE__, apIndex, supported, cmock_retval)
void wifi_setFTResourceRequestSupported_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, BOOL* supported, INT cmock_to_return);
#define wifi_getFTR0KeyLifetime_ExpectAndReturn(apIndex, lifetime, cmock_retval) wifi_getFTR0KeyLifetime_CMockExpectAndReturn(__LINE__, apIndex, lifetime, cmock_retval)
void wifi_getFTR0KeyLifetime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UINT* lifetime, INT cmock_to_return);
#define wifi_setFTR0KeyLifetime_ExpectAndReturn(apIndex, lifetime, cmock_retval) wifi_setFTR0KeyLifetime_CMockExpectAndReturn(__LINE__, apIndex, lifetime, cmock_retval)
void wifi_setFTR0KeyLifetime_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UINT* lifetime, INT cmock_to_return);
#define wifi_getFTR0KeyHolderID_ExpectAndReturn(apIndex, keyHolderID, cmock_retval) wifi_getFTR0KeyHolderID_CMockExpectAndReturn(__LINE__, apIndex, keyHolderID, cmock_retval)
void wifi_getFTR0KeyHolderID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR* keyHolderID, INT cmock_to_return);
#define wifi_setFTR0KeyHolderID_ExpectAndReturn(apIndex, keyHolderID, cmock_retval) wifi_setFTR0KeyHolderID_CMockExpectAndReturn(__LINE__, apIndex, keyHolderID, cmock_retval)
void wifi_setFTR0KeyHolderID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR* keyHolderID, INT cmock_to_return);
#define wifi_getFTR1KeyHolderID_ExpectAndReturn(apIndex, keyHolderID, cmock_retval) wifi_getFTR1KeyHolderID_CMockExpectAndReturn(__LINE__, apIndex, keyHolderID, cmock_retval)
void wifi_getFTR1KeyHolderID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR* keyHolderID, INT cmock_to_return);
#define wifi_setFTR1KeyHolderID_ExpectAndReturn(apIndex, keyHolderID, cmock_retval) wifi_setFTR1KeyHolderID_CMockExpectAndReturn(__LINE__, apIndex, keyHolderID, cmock_retval)
void wifi_setFTR1KeyHolderID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, UCHAR* keyHolderID, INT cmock_to_return);
#define wifi_pushApFastTransitionConfig_ExpectAndReturn(apIndex, ftData, cmock_retval) wifi_pushApFastTransitionConfig_CMockExpectAndReturn(__LINE__, apIndex, ftData, cmock_retval)
void wifi_pushApFastTransitionConfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, wifi_FastTransitionConfig_t* ftData, INT cmock_to_return);
#define wifi_setBSSTransitionActivation_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_setBSSTransitionActivation_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_setBSSTransitionActivation_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UINT apIndex, BOOL activate, INT cmock_to_return);
#define wifi_getBSSTransitionActivation_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_getBSSTransitionActivation_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_getBSSTransitionActivation_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UINT apIndex, BOOL* activate, INT cmock_to_return);
#define wifi_setNeighborReportActivation_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_setNeighborReportActivation_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_setNeighborReportActivation_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UINT apIndex, BOOL activate, INT cmock_to_return);
#define wifi_getNeighborReportActivation_ExpectAndReturn(apIndex, activate, cmock_retval) wifi_getNeighborReportActivation_CMockExpectAndReturn(__LINE__, apIndex, activate, cmock_retval)
void wifi_getNeighborReportActivation_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UINT apIndex, BOOL* activate, INT cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
