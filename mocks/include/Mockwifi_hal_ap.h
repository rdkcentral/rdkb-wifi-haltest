/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKWIFI_HAL_AP_H
#define _MOCKWIFI_HAL_AP_H

#include "unity.h"
#include "wifi_hal_ap.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockwifi_hal_ap_Init(void);
void Mockwifi_hal_ap_Destroy(void);
void Mockwifi_hal_ap_Verify(void);




#define wifi_getApAssociatedDevice_ExpectAndReturn(apIndex, output_deviceMacAddressArray, maxNumDevices, output_numDevices, cmock_retval) wifi_getApAssociatedDevice_CMockExpectAndReturn(__LINE__, apIndex, output_deviceMacAddressArray, maxNumDevices, output_numDevices, cmock_retval)
void wifi_getApAssociatedDevice_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, mac_address_t* output_deviceMacAddressArray, UINT maxNumDevices, UINT* output_numDevices, INT cmock_to_return);
#define wifi_enableCSIEngine_ExpectAndReturn(apIndex, sta, enable, cmock_retval) wifi_enableCSIEngine_CMockExpectAndReturn(__LINE__, apIndex, sta, enable, cmock_retval)
void wifi_enableCSIEngine_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, INT apIndex, mac_address_t sta, BOOL enable, INT cmock_to_return);
#define wifi_createVAP_ExpectAndReturn(index, map, cmock_retval) wifi_createVAP_CMockExpectAndReturn(__LINE__, index, map, cmock_retval)
void wifi_createVAP_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, wifi_radio_index_t index, wifi_vap_info_map_t* map, INT cmock_to_return);
#define wifi_getRadioVapInfoMap_ExpectAndReturn(index, map, cmock_retval) wifi_getRadioVapInfoMap_CMockExpectAndReturn(__LINE__, index, map, cmock_retval)
void wifi_getRadioVapInfoMap_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, wifi_radio_index_t index, wifi_vap_info_map_t* map, INT cmock_to_return);
#define wifi_mgmt_frame_callbacks_register_ExpectAndReturn(mgmtRxCallback, cmock_retval) wifi_mgmt_frame_callbacks_register_CMockExpectAndReturn(__LINE__, mgmtRxCallback, cmock_retval)
void wifi_mgmt_frame_callbacks_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, wifi_receivedMgmtFrame_callback mgmtRxCallback, INT cmock_to_return);
#define wifi_newApAssociatedDevice_callback_register_Expect(callback_proc) wifi_newApAssociatedDevice_callback_register_CMockExpect(__LINE__, callback_proc)
void wifi_newApAssociatedDevice_callback_register_CMockExpect(UNITY_LINE_TYPE cmock_line, wifi_newApAssociatedDevice_callback callback_proc);
#define wifi_apDeAuthEvent_callback_register_Expect(callback_proc) wifi_apDeAuthEvent_callback_register_CMockExpect(__LINE__, callback_proc)
void wifi_apDeAuthEvent_callback_register_CMockExpect(UNITY_LINE_TYPE cmock_line, wifi_apDeAuthEvent_callback callback_proc);
#define wifi_apDisassociatedDevice_callback_register_Expect(callback_proc) wifi_apDisassociatedDevice_callback_register_CMockExpect(__LINE__, callback_proc)
void wifi_apDisassociatedDevice_callback_register_CMockExpect(UNITY_LINE_TYPE cmock_line, wifi_apDisassociatedDevice_callback callback_proc);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
